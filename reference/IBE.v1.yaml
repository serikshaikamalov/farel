Sopenapi: 3.0.0
info:
  title: IBE
  version: '1.0'
servers:
  - url: 'http://localhost:8080/api/v1/ibe'
paths:
  '/customers/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: uuid of an existing user.
    get:
      summary: Get User Info by User ID
      tags: 
        - User profile
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: qwerty123
                    firstName: Sierra
                    lastName: Fergusoon
                    email: sierra@gmail.com
                    phone: '+77078904592'
        '403':
          description: It is not possible to get other user profile
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
    put:
      tags:
        - User profile
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '204':
          description: User Updated
        '403':
          description: It is not possible to change other's profile.
        '404':
          description: User Not Found
      description: Update the infromation of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                phone:
                  type: string
            examples:
              Update profile for Rebecca:
                value:
                  firstName: Sierra
                  lastName: Fergusoon
                  phone: '+77078904592'
        description: Patch user profile to update.
  '/customers/{userId}/password':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: uuid of an existing logged user user.
    post:
      tags:
        - User profile
      summary: Update User password
      operationId: patch-password-userId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
            examples:
              Update password for account :
                value:
                  currentPassword: admin
                  newPassword: demo
      responses:
        '204':
          description: Password Updated
        '400':
          description: Password too short
        '403':
          description: Forbidden to change others password
        '404':
          description: User Not Found
      description: Update the infromation of an existing user.
  '/customers/{customerId}/bookings':
    parameters:
      - schema:
          type: string
        name: customerId
        in: path
        required: true
        description: uuid of an existing logged user user.
    get:
      summary: Get User Bookings by User ID
      tags: 
        - User profile
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bookings'
        '403':
          description: It is not possible to get other user profile
        '404':
          description: User Not Found
      operationId: get-bookings-userId
      description: Retrieve the bookings of the user with the matching user ID.

components:
  schemas:
    User:
      title: User
      type: object
      description: 'user profile'
      x-examples:
        Alice Smith:
          id: testid
          firstName: Sierra
          lastName: Fergusoon
          email: sierra@gmail.com
          phone: '+77078904592'
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
          format: phone
    UserChange:
      title: User change
      type: object
      description: 'user profile'
      x-examples:
        Alice Smith:
          firstName: Sierra
          lastName: Fergusoon
          phone: '+77078904592'
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
          format: phone
    Password:
      title: Change password
      type: object
      description: 'old and new passwords'
      x-examples:
        Alice Smith:
          currentPassword: current
          newPassword: new-password
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
    Bookings:
      title: Booking list
      type: object
      description: 'list of bookings'
      properties:
        order: 
          type: string
        price: 
          type: string
        status:
          type: string
        enum:
          - PAYMENT_AWAITING
          - PURCHASED
          - EXPIRED
          - CANCELED
          - REFUNDED
          - PROCESSING
          - ERROR
        flight:
          type: array
          items:
            $ref: '#/components/schemas/Flight'
    Flight:
      title: FLight
      type: object
      description: list of flights
      properties:
        departure: 
          type: object
          properties:
            date: 
              type: string
            code: 
              type: string
        arrival: 
          type: object
          properties:
            date: 
              type: string
            code: 
              type: string
            nextDay:
              type: integer
        duration:
          type: integer
        stop:
          type: integer
        stopDuration:
          type: integer
          description: stop duration in minutes
        stopCodes:
          type: array
          items:
            properties:
              type: string
        